nodeSelector: {}

replicas: 1

hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  # ATTENTION: This argument will be renamed in the future.
  targetCPUUtilizationPercentage: 50

image:
  repository: anycable/anycable-go
  tag: 1.2.3
  pullPolicy: IfNotPresent
  pullSecrets:
    enabled: false
    registry: "ghcr.io"
    username: ""
    password: ""

ingress:
  enable: false
  className: ""
  path: /cable
  annotations: {}
    # nginx.ingress.kubernetes.io/proxy-body-size: "32m"
  acme: {}
    # hosts: []
  nonAcme:
    hosts: []
    # - secretName: example-tls
    #   names: []
    #   tls:
    #     crt: ""
    #     key: ""

  # - acme: false
  #   name: example
  #   hosts: []
  #   path: /cable
  #   tls:
  #     crt: ""
  #     key: ""

revisionHistoryLimit: 10

rollingUpdate:
  maxSurge: 1
  maxUnavailable: 0

# Default resource limits for items API app.
# Do not forget to tune them to match your needs.
resources:
  limits:
    cpu: 350m
    memory: 400Mi
  requests:
    cpu: 350m
    memory: 400Mi

pod:
  annotations: {}
  extraLabels: {}
  # Use a different ServiceAccount
  # (leave blank for default)
  serviceAccountName: ""
  # Add tolerations to pods
  tolerations: []
    # - key: key1
    #   operator: Equal
    #   value: value1
    #   effect: NoExecute
    #   tolerationSeconds: 3600

service:
  annotations: {}
  type: ClusterIP

# Define names or additional secrets to overwrite env variables
# from the `env-secret.yml`.
# (`ANYCABLE_REDIS_URL`, `ANYCABLE_REDIS_SENTINELS`, etc.)
#
# You can add as may different secrets as you need,
# they will override same env variables in the given order.
secrets: []
# - 'custom-secret'

# # You can overwrite probes if needed
# livenessProbe:
#   httpGet:
#     path: /health
#     port: http
#   initialDelaySeconds: 90
#   timeoutSeconds: 3
#   successThreshold: 1
#   failureThreshold: 3
#   periodSeconds: 10
# readinessProbe:
#   httpGet:
#     path: /health
#     port: http
#   initialDelaySeconds: 15
#   timeoutSeconds: 3
#   successThreshold: 1
#   failureThreshold: 3
#   periodSeconds: 10

# # Or disable them altogether
# livenessProbe: ~
# readinessProbe: ~

serviceMonitor:
  enabled: false
  ## Specify a namespace if needed
  # namespace: monitoring
  # fallback to the prometheus default unless specified
  # interval: 10s
  ## Set of labels that need to be present in ServiceMonitor to be discovered by Prometheus:
  ## [Prometheus Selector Label](https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-operator-1)
  ## [Kube Prometheus Selector Label](https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#exporters)
  ## E.g. if you use prometheus-operator:
  # labels:
  #   release: prometheus-operator
  labels: {}

tls: {}
  # secretName: "anycable-go-tls-secret"
  # Keep empty to use existing secret
  # crt: ~
  # key: ~
  # OR fill it with PEM-encoded full certificate chain and private key to create new secret:
  # crt: |
  #   -----BEGIN CERTIFICATE-----
  #   …
  # key: |
  #   -----BEGIN PRIVATE KEY-----
  #   …

# Application options (passed as env variables)
env:
  # listen ip address or host
  anycableHost: "0.0.0.0"

  # listen port number
  anycablePort: "8080"

  # WebSocket endpoint path
  anycablePath: "/cable"

  # Broadcasting adapter to use (redis or http), default: redis
  anycableBroadcastAdapter: "redis"

  # HTTP pub/sub endpoint path
  anycableHttpBroadcastPath: "/_broadcast"

  # Which port to receive broadcasting requests
  anycableHttpBroadcastPort: "8090"

  # Authorization secret to protect the broadcasting endpoint
  anycableHttpBroadcastSecret: ""

  # Redis db url
  anycableRedisUrl: "redis://localhost:6379/5"

  # Redis channel for broadcasts
  anycableRedisChannel: "__anycable__"

  # Comma separated list of sentinel hosts, format: ':password@hostname:port,..'
  anycableRedisSentinels: ""

  # Interval to rediscover sentinels in seconds, anycable-go default: 30
  anycableRedisSentinelDiscoveryInterval: "30"

  # Interval to periodically ping Redis to make sure it's alive, default: 30
  anycableRedisKeepaliveInterval: "30"

  # Max number of concurrent RPC request; should be slightly less than the RPC server concurrency, default: 28
  anycableRpcConcurrency: "28"

  # RPC service address
  anycableRpcHost: "localhost:50051"

  # List of headers to proxy to RPC
  anycableHeaders: "cookie"

  # Max number of Disconnect calls per second
  anycableDisconnectRate: 100

  # Set logging level (debug/info/warn/error/fatal)
  anycableLogLevel: "info"

  # Set logging format (text, json)
  anycableLogFormat: "text"

  # Enable debug mode (more verbose logging)
  anycableDebug: ""

  # Enable metrics logging (with info level)
  anycableMetricsLog: ""

  # Specify how often flush metrics logs (in seconds)
  anycableMetricsLogInterval: "15"

  # Specify the path to custom Ruby formatter script (only supported on MacOS and Linux)
  anycableMetricsLogFormatter: ""

  # Enable HTTP metrics endpoint at the specified path
  anycableMetricsHttp: "/metrics"

  # Server host for metrics endpoint, default: the same as for main server,
  anycableMetricsHost: ""

  # Server port for metrics endpoint, default: the same as for main server,
  anycableMetricsPort: "8081"

  # HTTP health endpoint path
  anycableHealthPath: "/health"

  # Maximum size of a message in bytes, default: 65536
  anycableMaxMessageSize: ""

  # Limit simultaneous server connections (0 – without limit), default: 0
  anycableMaxConn: "0"

  # Enable client-side TLS with the RPC server, default: false
  anycableRpcEnableTls: "false"

  # Override default MaxCallRecvMsgSize for RPC client (bytes), default: none
  anycableRpcMaxCallRecvSize: ""

  # Override default MaxCallSendMsgSize for RPC client (bytes), default: none
  anycableRpcMaxCallSendSize: ""

  # Graceful shutdown timeouts (in seconds), default: 5
  anycableDisconnectTimeout: "5"

  # Disable calling Disconnect callback, default: false
  anycableDisableDisconnect: "false"

  # Specify how often flush metrics to writers (logs, statsd) (in seconds), default: 15
  anycableMetricsRotateInterval: "15"

  # WebSocket connection read buffer size, default: 1024
  anycableReadBufferSize: "1024"

  # WebSocket connection write buffer size, default: 1024
  anycableWriteBufferSize: "1024"

  # Enable experimental WebSocket per message compression, default: false
  anycableEnableWsCompression: "false"

  # The size of the goroutines pool to broadcast messages, default: 16
  anycableHubGopoolSize: "16"

  # Accept requests only from specified origins. No check is performed if empty, default: ""
  anycableAllowedOrigins: ""

  # Action Cable ping interval (in seconds), default: 3
  anycablePingInterval: "3"

  # Precision for timestamps in ping messages (s, ms, ns), default: s
  anycablePingTimestampPrecision: "s"

  # How often to refresh the server stats (in seconds), default: 5
  anycableStatsRefreshInterval: "5"

  # The encryption key used to verify JWT tokens, default: "" (disabled)
  anycableJwtIdKey: ""

  # The name of a query string param or an HTTP header carrying a token, default: "jid" ("X-JID")
  anycableJwtIdParam: "jid"

  # Whether to enforce token presence for all connections, default: false
  anycableJwtIdEnforce: "false"

  # Enable Turbo Streams fastlane with the specified signing key, default: "" (disabled)
  anycableTurboRailsKey: ""

  # Enable CableReady fastlane with the specified signing key, default: "" (disabled)
  anycableCableReadyKey: ""

  # Under this key you can define custom env variables (for example,
  # to support new anycable features, not added to the chart yet).
  # All variables from this part are added to the pod through the secret.
  #
  # Example
  #   custom:
  #     NEW_FEATURE: foobar
  custom: {}

global:
  # In this global you can overload any path defined in the rest of the chart
  anycableGo: {}
