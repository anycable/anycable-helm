nodeSelector: {}

replicas: 1

image:
  repository: anycable/anycable-go
  tag: 1.0.1
  pullPolicy: IfNotPresent

ingress:
  enable: false
  path: /cable
  annotations: {}
    # nginx.ingress.kubernetes.io/proxy-body-size: "32m"
  acme: {}
    # hosts: []
  nonAcme:
    hosts: []
    # - secretName: example-tls
    #   names: []
    #   tls:
    #     crt: ""
    #     key: ""

  # - acme: false
  #   name: example
  #   hosts: []
  #   path: /cable
  #   tls:
  #     crt: ""
  #     key: ""


revisionHistoryLimit: 10

rollingUpdate:
  maxSurge: 1
  maxUnavailable: 0

# Default resource limits for items API app.
# Do not forget to tune them to match your needs.
resources:
  limits:
    cpu: 350m
    memory: 400Mi
  requests:
    cpu: 350m
    memory: 400Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 90
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 15
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
  periodSeconds: 10

serviceMonitor:
  enabled: false
  ## Specify a namespace if needed
  # namespace: monitoring
  # fallback to the prometheus default unless specified
  # interval: 10s
  ## Set of labels that need to be present in ServiceMonitor to be discovered by Prometheus:
  ## [Prometheus Selector Label](https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-operator-1)
  ## [Kube Prometheus Selector Label](https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#exporters)
  ## E.g. if you use prometheus-operator:
  # labels:
  #   release: prometheus-operator
  labels: {}

# Application options (passed as env variables)
env:
  # listen ip address or host
  anycableHost: "0.0.0.0"

  # listen port number
  anycablePort: "8080"

  # WebSocket endpoint path
  anycablePath: "/cable"

  # SSL certificate path
  anycableSslCert: ""

  # SSL private key path
  anycableSslKey: ""

  # Redis db url
  anycableRedisUrl: "redis://localhost:6379/5"

  # Redis channel for broadcasts
  anycableRedisChannel: "__anycable__"

  # Comma separated list of sentinel hosts, format: ':password@hostname:port,..'
  anycableRedisSentinels: ""

  # Interval to rediscover sentinels in seconds, anycable-go default: 30
  anycableRedisSentinelDiscoveryInterval: "30"

  # Interval to periodically ping Redis to make sure it's alive, default: 30
  anycableRedisKeepaliveInterval: ""

  # RPC service address
  anycableRpcHost: "localhost:50051"

  # List of headers to proxy to RPC
  anycableHeaders: "cookie"

  # Max number of Disconnect calls per second
  anycableDisconnectRate: "100"

  # Set logging level (debug/info/warn/error/fatal)
  anycableLogLevel: "info"

  # Set logging format (text, json)
  anycableLogFormat: "text"

  # Enable debug mode (more verbose logging)
  anycableDebug: ""

  # Enable metrics logging (with info level)
  anycableMetricsLog: ""

  # Specify how often flush metrics logs (in seconds)
  anycableMetricsLogInterval: "15"

  # Specify the path to custom Ruby formatter script (only supported on MacOS and Linux)
  anycableMetricsLogFormatter: ""

  # Enable HTTP metrics endpoint at the specified path
  anycableMetricsHttp: "/metrics"

  # Server host for metrics endpoint, default: the same as for main server,
  anycableMetricsHost: ""

  # Server port for metrics endpoint, default: the same as for main server,
  anycableMetricsPort: "8081"

  # HTTP health endpoint path
  anycableHealthPath: "/health"

  # Maximum size of a message in bytes, default: 65536
  anycableMaxMessageSize: ""
